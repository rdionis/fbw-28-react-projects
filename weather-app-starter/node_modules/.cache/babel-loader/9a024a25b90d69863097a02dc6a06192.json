{"ast":null,"code":"var _jsxFileName = \"/home/dcist123/Documents/fbw-28/REACTJS/react-projects/weather-app-starter/src/components/Main.jsx\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./Header\";\nimport Content from \"./Content\";\nimport WeatherSearch from \"./WeatherSearch\";\nimport WeatherData from \"./WeatherData\"; //this file contains all the core functionality for this app\n//it is the convention to make certain variables uppercase and anything you store your API KEYS inside of just tends to be uppercase ---> it is just a convention\n\nconst Main = () => {\n  const [weather, setWeather] = useState();\n  /*this is the same as this:\n  const weather = useState [0] ---> 'weather' is the name of our state\n  const setWeather = useState [1] ---> 'setWeather' is the function that you can use in order to update the state | this second argument acts like the setState method in the Class Components */\n  //this syntax is known as array destructuring in JavaScript\n\n  const api_call = async e => {\n    e.preventDefault();\n    const API_KEY = \"8e0aa905ce144f49bf1a5f4c95149722\";\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=Manchester&appid=${API_KEY}`;\n    const request = axios.get(url); //axios is a promise-based library\n\n    const response = await request;\n    setWeather(response.data.main);\n  };\n\n  console.log(weather); // useEffect(() => {\n  //   api_call();\n  // }, []);\n  // this empty array argument is going to make sure that this useEffect hook acts like the componentDidUpdate; it isn't really a good idea to compare hooks to life cycle methods: yes, they do behave similarly but they should be looked at as their own entity. So here we are telling this useEffect hook to only execute this api_call method when the Main component first renders onto the screen, and we are doing that by giving it a second argument, which is an empty array\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(WeatherSearch, {\n    api_call: api_call,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(WeatherData, {\n    weather: weather,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Main;","map":{"version":3,"sources":["/home/dcist123/Documents/fbw-28/REACTJS/react-projects/weather-app-starter/src/components/Main.jsx"],"names":["React","useState","axios","Header","Content","WeatherSearch","WeatherData","Main","weather","setWeather","api_call","e","preventDefault","API_KEY","url","request","get","response","data","main","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CACA;AAEA;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,EAAtC;AAEA;;;AAIA;;AAEA,QAAMS,QAAQ,GAAG,MAAOC,CAAP,IAAa;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,OAAO,GAAG,kCAAhB;AACA,UAAMC,GAAG,GAAI,sEAAqED,OAAQ,EAA1F;AACA,UAAME,OAAO,GAAGb,KAAK,CAACc,GAAN,CAAUF,GAAV,CAAhB,CAJ4B,CAII;;AAChC,UAAMG,QAAQ,GAAG,MAAMF,OAAvB;AACAN,IAAAA,UAAU,CAACQ,QAAQ,CAACC,IAAT,CAAcC,IAAf,CAAV;AACD,GAPD;;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAYb,OAAZ,EAjBiB,CAmBjB;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAEE,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAEF,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,CADF;AASD,CAjCD;;AAmCA,eAAeD,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Header from \"./Header\";\nimport Content from \"./Content\";\nimport WeatherSearch from \"./WeatherSearch\";\nimport WeatherData from \"./WeatherData\";\n//this file contains all the core functionality for this app\n\n//it is the convention to make certain variables uppercase and anything you store your API KEYS inside of just tends to be uppercase ---> it is just a convention\n\nconst Main = () => {\n  const [weather, setWeather] = useState();\n\n  /*this is the same as this:\n  const weather = useState [0] ---> 'weather' is the name of our state\n  const setWeather = useState [1] ---> 'setWeather' is the function that you can use in order to update the state | this second argument acts like the setState method in the Class Components */\n\n  //this syntax is known as array destructuring in JavaScript\n\n  const api_call = async (e) => {\n    e.preventDefault();\n    const API_KEY = \"8e0aa905ce144f49bf1a5f4c95149722\";\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=Manchester&appid=${API_KEY}`;\n    const request = axios.get(url); //axios is a promise-based library\n    const response = await request;\n    setWeather(response.data.main);\n  };\n  console.log(weather);\n\n  // useEffect(() => {\n  //   api_call();\n  // }, []);\n  // this empty array argument is going to make sure that this useEffect hook acts like the componentDidUpdate; it isn't really a good idea to compare hooks to life cycle methods: yes, they do behave similarly but they should be looked at as their own entity. So here we are telling this useEffect hook to only execute this api_call method when the Main component first renders onto the screen, and we are doing that by giving it a second argument, which is an empty array\n\n  return (\n    <div className=\"main\">\n      <Header />\n      <Content>\n        <WeatherSearch api_call={api_call} />\n        <WeatherData weather={weather} />\n      </Content>\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}